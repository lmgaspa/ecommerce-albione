spring:
  datasource:
    # Usa JDBC_* do Heroku se existir; senão, cai no seu DATABASE_URL
    url: ${JDBC_DATABASE_URL:${DATABASE_URL}}
    username: ${JDBC_DATABASE_USERNAME:${DB_USERNAME}}
    password: ${JDBC_DATABASE_PASSWORD:${DB_PASSWORD}}
    driver-class-name: org.postgresql.Driver
    hikari:
    # (opcional) propriedades extras
    # data-source-properties:
    #   sslmode: require

  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false         # ✅ remove o warning e é mais seguro em prod
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        jdbc.time_zone: UTC

  mvc:
    async:
      request-timeout: -1

  lifecycle:
    timeout-per-shutdown-phase: 15s

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  task:
    scheduling:
      pool:
        size: 2

server:
  port: ${PORT:${SERVER_PORT:8080}}
  shutdown: graceful
  compression:
    enabled: true
    mime-types: application/json, text/html, text/plain
  # (opcional, útil no Heroku/NGINX para pegar scheme/host corretos)
  forward-headers-strategy: framework
  error:
    include-message: always
    include-binding-errors: always

logging:
  level:
    org.hibernate: warn
    org.hibernate.orm.connections.pooling: warn
    com.zaxxer.hikari: warn
    com.luizgasparetto.backend.monolito: info   # ✅ deixe LIGADO para ver logs do fluxo
    com.luizgasparetto.backend.monolito.services.PixWatcher: debug
    com.luizgasparetto.backend.monolito.services.CardWatcher: debug
    com.luizgasparetto.backend.monolito.services.PaymentProcessor: debug

email:
  author: ${EMAIL_AUTHOR}

efi:
  pix:
    client-id: ${EFI_CLIENT_ID}
    client-secret: ${EFI_CLIENT_SECRET}
    chave: ${EFI_PIX_KEY}
    cert-path: classpath:producao-albione.p12
    cert-password: ""          # preencha se o .p12 tiver senha
    sandbox: false
  card:
    client-id: ${EFI_CARD_CLIENT_ID}
    client-secret: ${EFI_CARD_CLIENT_SECRET}
    sandbox: false

springdoc:
  api-docs.path: /api-docs
  swagger-ui.path: /swagger
  swagger-ui.display-request-duration: true
  swagger-ui.try-it-out-enabled: true

checkout:
  reserve:
    ttl-seconds: ${CHECKOUT_RESERVE_TTL_SECONDS:300}   # 5 min
    reaper-ms:  ${CHECKOUT_RESERVE_REAPER_MS:60000}   # 60 s